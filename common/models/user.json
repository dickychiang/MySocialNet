{
	"name": "user",
	"base": "User",
	"options": {
		"mysql": {
			"table": "Users"
		}
	},
	"idInjection": false,
	"properties": {
		"id": {
			"id": true,
			"type": "number",
			"mysql": {
				"columnName":"UserId",
				"dataType":"int",
				"dataLength": null,
				"dataScale": 0,
				"nullable":"N"
			}
		},
		"username": {
			"type": "string",
			"required": true,
			"mysql": {
				"columnName":"Username",
				"dataType":"VARCHAR2",
				"dataLength":32,
				"nullable":"N"
			}
		},
		"password": {
			"type": "string",
			"required": true,
			"mysql": {
				"dataType": "VARCHAR",
				"dataLength": 60
			}
		},
		"firstName": {
			"type": "string",
			"required": true,
			"mysql": {
				"columnName":"FirstName",
				"dataType":"VARCHAR2",
				"dataLength":128,
				"nullable":"N"
			}
		},
		"lastName": {
			"type": "string",
			"required": true,
			"mysql": {
				"columnName":"LastName",
				"dataType":"VARCHAR2",
				"dataLength":64,
				"nullable":"N"
			}
		},
		"email": {
			"type": "string",
			"required": true,
			"mysql": {
				"columnName":"Email",
				"dataType":"VARCHAR2",
				"dataLength":512,
				"nullable":"N"
			}
		},
		"role": {
			"type": "string",
			"required": true,
			"mysql": {
				"columnName":"Role",
				"dataType":"VARCHAR2",
				"dataLength":16,
				"nullable":"N"
			}
		},
		"address": {
			"type": "string",
			"required": true,
			"mysql": {
				"columnName":"Address",
				"dataType":"VARCHAR2",
				"dataLength":512,
				"nullable":"N"
			}
		},
		"phone": {
			"type": "string",
			"required": true,
			"mysql": {
				"columnName":"Phone",
				"dataType":"VARCHAR2",
				"dataLength":32,
				"nullable":"N"
			}
		},
		"created": {
			"type": "date",
			"mysql": {
				"columnName":"CreatedOn",
				"dataType":"datetime",
				"dataLength": null,
				"dataScale": 0,
				"nullable":"N"
			}
		}
	},
	"validations": [],
	"relations": {
		"elder_relation": {
			"type": "hasMany",
			"model": "relation",
			"foreignKey": "elderlyUserId"
		},
		"related_relation": {
			"type": "hasMany",
			"model": "relation",
			"foreignKey": "relatedUserId"
		},
		"serviceProvider": {
			"type": "hasMany",
			"model": "serviceProvider",
			"foreignKey": "userId"
		},
		"service": {
			"type": "hasMany",
			"model": "service",
			"foreignKey": "userId",
			"through": "serviceProvider"
		},
		"post": {
			"type": "hasMany",
			"model": "post",
			"foreignKey": "userId"
		},
		"comment": {
			"type": "hasMany",
			"model": "comment",
			"foreignKey": "userId"
		},
		"message": {
			"type": "hasMany",
			"model": "message",
			"foreignKey": "ownerId"
		}
	},
	"acls": [
		{
			"principalType": "ROLE",
			"principalId": "$authenticated",
			"permission": "ALLOW",
			"property": "session"
		},
		{
			"principalType": "ROLE",
			"principalId": "$authenticated",
			"permission": "ALLOW",
			"property": "findById"
		},
		{
			"principalType": "ROLE",
			"principalId": "$authenticated",
			"permission": "ALLOW",
			"property": "friends"
		},
		{
			"principalType": "ROLE",
			"principalId": "$authenticated",
			"permission": "ALLOW",
			"property": "onlineUserIds"
		},
		{
			"principalType": "ROLE",
			"principalId": "$authenticated",
			"permission": "ALLOW",
			"property": "__get__service"
		},
		{
			"principalType": "ROLE",
			"principalId": "$authenticated",
			"permission": "ALLOW",
			"property": "__findById__service"
		},
		{
			"principalType": "ROLE",
			"principalId": "$authenticated",
			"permission": "ALLOW",
			"property": "__get__serviceProvider"
		},
		{
			"principalType": "ROLE",
			"principalId": "$authenticated",
			"permission": "ALLOW",
			"property": "__findById__serviceProvider"
		}
	],
	"methods": []
}
